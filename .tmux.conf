## Compatibility settings

# When TERM is set to xterm-256color outisde tmux, assume support for true
# (24-bit) color.
set-option -ga terminal-overrides "xterm-256color:Tc"

# Set value of TERM env var when inside tmux.
set-option -g default-terminal "screen-256color"

# Send escape key almost right away when pressed (5 ms).
# When this was set to 0, I occasionally had issues.
set-option -g escape-time 5



## Options

# Use emacs-style keybindings in command-line mode.
set-option -g status-keys emacs

# Use vi-style keybindings in copy mode.
set-option -g mode-keys vi

# Keep more history
set-option -g history-limit 10000

# Show messages in the status line for longer (1.25 seconds).
set-option -g display-time 1250

# Status line time formatting: 12-hour
# The status-right-length option is set to 40 by default, so we don't want
# to print more than 19 characters of the pane title.
set-option -g status-right ' "#{=19:pane_title}" %I:%M%P %d-%b-%y'

# 12-hour time format for `prefix t' time display.
set-option -g clock-mode-style 12

# Hide the status bar on startup.
#set-option -g status off



## Different colors on different machines

# Select which color to use for the status bar and pane borders.
# Green on laptop, cyan everywhere else.
set-option -gF @theme_color \
    "#{?#{||:#{==:#{host},kevan-thinkpad},#{==:#{host},kevan-ThinkPad-T450s}},green,cyan}"

# Set colors accordingly.
set-option -gF status-style fg=black,bg="#{@theme_color}"
set-option -gF pane-active-border-style fg="#{@theme_color}"



## Keybinds.

# Change prefix key to M-a
unbind-key C-b
set-option -g prefix M-a
bind-key M-a send-prefix

# Send prefix (M-a) in one keypress. Sometimes nice for nested tmux sessions.
bind-key -n M-s send-prefix

# Open a tmux command prompt. Default keybind is `prefix :'
bind-key \; command-prompt
bind-key -n M-c command-prompt

# Launch new windows in the same directory as the current pane
bind-key c new-window -c "#{pane_current_path}"

# Toggle the status bar.
bind-key -n "M-'" set-option status



# Switch windows
bind-key -n M-, previous-window
bind-key -n M-\; next-window

# Switch panes.
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

# Resize panes.
bind-key -n M-H resize-pane -L 5
bind-key -n M-J resize-pane -D 5
bind-key -n M-K resize-pane -U 5
bind-key -n M-L resize-pane -R 5



# Split current pane
bind-key h split-window -c "#{pane_current_path}" -h \; swap-pane -U
bind-key j split-window -c "#{pane_current_path}"
bind-key k split-window -c "#{pane_current_path}" \; swap-pane -U
bind-key l split-window -c "#{pane_current_path}" -h

# Swap two ajacent panes.
bind-key M-h swap-pane -d -t {left-of}
bind-key M-j swap-pane -d -t {down-of}
bind-key M-k swap-pane -d -t {up-of}
bind-key M-l swap-pane -d -t {right-of}



## Copy mode binds.

# Use v to select text in vi-style copy mode (spacebar still works too).
# And rebind rectangle-toggle to C-v (it's bound to v by default).
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Scroll 5x faster in copy mode.
bind-key -T copy-mode-vi C-e send-keys -X -N 5 scroll-down
bind-key -T copy-mode-vi C-y send-keys -X -N 5 scroll-up

# Yank to the system clipboard by default.
# Requires xclip installed.
bind-key -T copy-mode-vi Enter \
    send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Yank the selection (to the system clipboard), but without leaving copy mode.
# This command is a little buggy for me; it garbles the text on the screen
# when called, priting an MD5 hash (?) over the yanked selection.
bind-key -T copy-mode-vi y \
    send-keys -X copy-pipe "xclip -in -selection clipboard"



## Additional work settings

# Load another config file.
if-shell '[ -f ~/notes/config/tmux-conf-snippet ]' \
    'source-file ~/notes/config/tmux-conf-snippet'
