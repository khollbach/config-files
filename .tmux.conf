# -----------------------------------------------------------------------------
# Compatibility settings
# -----------------------------------------------------------------------------

# When TERM is set to xterm-256color outisde tmux, assume support for true
# (24-bit) color.
set-option -ga terminal-overrides xterm-256color:Tc

# Send escape key almost right away when pressed (5 ms).
# When this was set to 0, I occasionally had issues.
set-option -g escape-time 5

# -----------------------------------------------------------------------------
# Options
# -----------------------------------------------------------------------------

# Use emacs-style keybindings in command-line mode.
set-option -g status-keys emacs

# Use vi-style keybindings in copy mode.
set-option -g mode-keys vi

# Make the word separators used for `w` motion more Vim-like;
# ie, everything but `_`.
set-option -g word-separators ' !"#$%&()*+,-./:;<=>?@[\]^`{|}+~'
set-option -ga word-separators "'"

# Keep way more history.
# With 50,000 lines of history per pane, you can expect each pane's history to
# take about 1 or 2 MB of memory when full.
set-option -g history-limit 50000

# Show messages in the status line for longer (1.25 seconds).
set-option -g display-time 1250

# 12-hour time format for `prefix t' time display.
set-window-option -g clock-mode-style 12

# Different color theme on different machines
%if #{m:kevan-*,#{host}}
set-option -g status off
set-option -g status-style fg=brightblack,bg=brightgreen
set-option -g pane-active-border-style fg=brightgreen
set-option -g pane-border-style fg=black
set-option -g status-right ''
%endif
%if #{!=:#{m:kevan-*,#{host}},1}
set-option -g status-style fg=brightblack,bg=cyan
set-option -g pane-active-border-style fg=cyan
set-option -g pane-border-style fg=default
set-option -g status-right ' "#{=37:pane_title}"'
%endif

# -----------------------------------------------------------------------------
# Keybinds
# -----------------------------------------------------------------------------

# Change prefix key to M-a
unbind-key C-b
set-option -g prefix M-a
bind-key M-a send-prefix

# Open a tmux command prompt with M-s. Default keybind is `prefix-:'
bind-key -n M-s command-prompt

# Toggle the status bar.
bind-key -n "M-'" set-option status

# Launch new windows in the same directory as the current pane
# Also, unhide the status line whenever you create a new window.
bind-key c set-option status on \; new-window -c "#{pane_current_path}"

# Unhide the status line when you break a pane into its own window.
bind-key ! set-option status on \; break-pane

# Bind page-up to "enter copy mode and go back one page", and then auto-exit
# copy-mode upon paging to the bottom.
# Basically, make page-up/page-down behave as expected.
bind-key -n PageUp copy-mode -eu
bind-key -n PageDown run-shell true  # Do nothing when in normal mode.



# Switch windows
bind-key -n M-, previous-window
bind-key -n M-\; next-window

# Switch panes.
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

# Resize panes.
bind-key -n M-H resize-pane -L 5
bind-key -n M-J resize-pane -D 5
bind-key -n M-K resize-pane -U 5
bind-key -n M-L resize-pane -R 5

# Split current pane
bind-key h split-window -c "#{pane_current_path}" -h \; swap-pane -U
bind-key j split-window -c "#{pane_current_path}"
bind-key k split-window -c "#{pane_current_path}" \; swap-pane -U
bind-key l split-window -c "#{pane_current_path}" -h

# Swap two ajacent panes.
bind-key M-h swap-pane -d -t {left-of}
bind-key M-j swap-pane -d -t {down-of}
bind-key M-k swap-pane -d -t {up-of}
bind-key M-l swap-pane -d -t {right-of}



# Save the current pane's history to a file, including color escape sequences.
bind-key y command-prompt -p 'Save history to filename:' -I '~/tmux-history' \
    'capture-pane -e -S - ; save-buffer %% ; delete-buffer'

# The same as above, but with no colors.
bind-key Y command-prompt -p 'Save history to filename:' -I '~/tmux-history' \
    'capture-pane -S - ; save-buffer %% ; delete-buffer'

# -----------------------------------------------------------------------------
# Copy mode binds
# -----------------------------------------------------------------------------

# Use v to select text in vi-style copy mode (spacebar still works too).
# And rebind rectangle-toggle to C-v (it's bound to v by default).
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Scroll 5x faster in copy mode.
bind-key -T copy-mode-vi C-e send-keys -X -N 5 scroll-down
bind-key -T copy-mode-vi C-y send-keys -X -N 5 scroll-up

# Home and end keys
bind-key -T copy-mode-vi Home send-keys -X back-to-indentation
bind-key -T copy-mode-vi End send-keys -X end-of-line

# Yank to the system clipboard by default (if xclip is installed).
bind-key -T copy-mode-vi Enter \
    send-keys -X copy-pipe-and-cancel \
    "command -v xclip && xclip -in -selection clipboard || tmux load-buffer -"

# Paste from the system clipboard by default.
bind-key ] run-shell \
    "command -v xclip > /dev/null && \
     (xclip -out -selection clipboard | tmux load-buffer -); \
     tmux paste-buffer"

# Yank the selection (to the system clipboard), without leaving copy mode.
# The `copy-pipe` command is a little buggy for me; it garbles the text on
# the screen when called. (I also have the same issue with `copy-selection`.)
bind-key -T copy-mode-vi y \
    send-keys -X copy-pipe \
    "command -v xclip && xclip -in -selection clipboard || tmux load-buffer -"

# Yank the current line, without the trailing newline.
bind-key -T copy-mode-vi Y \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-and-cancel "tr -d '\n' | \
    (command -v xclip && xclip -in -selection clipboard || tmux load-buffer -)"

# Yank from the cursor to end-of-line, without the trailing newline.
bind-key -T copy-mode-vi D \
    send-keys -X begin-selection \; \
    send-keys -X end-of-line \; \
    send-keys -X copy-pipe-and-cancel "tr -d '\n' | \
    (command -v xclip && xclip -in -selection clipboard || tmux load-buffer -)"

# -----------------------------------------------------------------------------
# Misc
# -----------------------------------------------------------------------------

# Load work-related settings
source-file -q ~/notes/config/tmux-conf-snippet
