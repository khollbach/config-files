#!/usr/bin/python3

#
# This script generates a config file for `keyd` that remaps alphabetic keys
# from QWERTY to Workman. (Except when a modifier is held, in which case the
# original QWERTY key is used.)
#
# E.g.:
# j => n
# ctrl+j => ctrl+j
#

def main():
    header()
    no_modifiers_held()
    modifiers_held()

def header():
    print('''\
# This file is generated by a script. You probably don't want to edit it by hand.

[ids]

*
''', end='')


def no_modifiers_held():
    print('''\

[main]

''', end='')

    qwerty_to_workman = [
        ('q', 'q'),
        ('w', 'd'),
        ('e', 'r'),
        ('r', 'w'),
        ('t', 'b'),
        ('y', 'k'),
        ('u', 'f'),
        ('i', 'u'),
        ('o', 'p'),
        ('p', ';'),

        ('a', 'a'),
        ('s', 's'),
        ('d', 'h'),
        ('f', 't'),
        ('g', 'g'),
        ('h', 'y'),
        ('j', 'n'),
        ('k', 'e'),
        ('l', 'o'),
        (';', 'i'),

        ('z', 'z'),
        ('x', 'x'),
        ('c', 'm'),
        ('v', 'c'),
        ('b', 'v'),
        ('n', 'j'),
        ('m', 'l'),
    ]

    for (qwerty, workman) in qwerty_to_workman:
        print(qwerty, '=', workman)

def modifiers_held():
    alphabetic_and_semicolon = 'abcdefghijklmnopqrstuvwxyz;'

    for (modifier, modifier_short) in [('control', 'C'), ('alt', 'A'), ('meta', 'M')]:
        print()
        print(f'[{modifier}]')
        print()

        for key in alphabetic_and_semicolon:
            print(f'{key} = {modifier_short}-{key}')

if __name__ == '__main__':
    main()

