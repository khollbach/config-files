Use --expect to get your C-r fzf binding to work the way you want.
- And get this behaviour for C-t as well actually.
Reference: https://github.com/junegunn/fzf/issues/355

Rebind fzf-history to M-r so that you can still use C-r with C-o.
While you're at it, unbind M-c.

---

Vim: fix light mode statusline color and get rid of the laststatus=1 hack.
(Also, low priority: why does the main split's filename disappear when I'm focusing the quickfix list?)

Get fzf and ranger to have lightbg-compatible file syntax highlighting.
- Solarized ideally :)!

Set up 'delta' instead of diff-so-fancy, so that you get syntax highlighting in your diffs.
https://github.com/dandavison/delta

---

Get scrolling to work in both tmux *and* vim, not just one or the other.

Maybe turn on mouse support for tmux and/or vim.

---

Vim: figure out how to paste while correcting indentation, and pick a keybind for it.

---

In coc.nvim get the desired behaviour of not triggering until I press tab.

---

Make vim open files as read-only always by default, and then upon any command that would modify the file, lock the file as being written to (by unsetting readonly). This would solve the problem of opening a file just to look at (or even jumping to a defn in a file and then jumping back) in a vim session, then trying to actually *edit* that file later in another vim session (while the first session is still open). Really, this should just work in the obvious way.
- This seems super obvious, so maybe there's already a plugin for this?

---

Important use case: go to uses of a function / type in Vim (easy if in the same file; o/w currently very hard). Could maybe be done in an fzf popup window with filename:lineno + a preview of the file? Using ripgrep somehow?
- Figure out what you need, and look for possible solutions.
- Could use the keybind 'K' for go-to-uses
- See also notes below re: slack convo.
- See the 'Go To Defn' and 'Find References' sections of https://github.com/dense-analysis/ale

Some guy from #vim on slack, re: preview window for fzf find:
" junegunn/fzf.vim
" Similarly, we can apply it to fzf#vim#grep. To use ripgrep instead of ag:
command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%:hidden', '?'),
  \   <bang>0)" Likewise, Files command with preview window
command! -bang -nargs=? -complete=dir Files
  \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)nnoremap <Leader>f :Files<CR>
nnoremap <Leader>g :Rg<Space>
nnoremap <Leader>j :BTags<CR>
nnoremap <Leader>a :Buffers<CR>
let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.6, 'highlight': 'Todo', 'rounded': v:false } }

---

tmux keybinds: alt-shift-, and alt-shift-;
- Swap current window with next/prev window.

tmux keybind: alt-shift-X
- Break window into new terminal.
  - This means creating a new session,  ] -> Unless these have their own tmux command ???
    moving the window to that session,  ]
    then opening a new terminal attached to that session.

---

Debug complete-alias + git. See todos in `.bash_aliases`.

Could find a way to get your config files to have any directory name, so you can rename them at work
- Maybe part of update configs will involve setting the name somewhere or something? This might be a little tricky, and you might have to replace the text in profile, etc.
- Or else could you avoiding mentioning `config-files` by name in .profile and stuff by symlinking a bin folder somewhere? Think over the options.

Why does my xfce+i3 take so long to load xfce4-panel?
- I can start terminals right away, but the panel takes forever. I never had this problem with vanilla xfce4.
- Happens at work too.
